datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

model User {
  id                     Int       @id @default(autoincrement())
  email                  String?   @unique
  name                   String
  password               String?
  active                 Boolean   @default(false)
  bio                    String?
  role                   Role      @default(USER)
  permalink              String    @unique
  githubId               String?   @unique
  googleId               String?   @unique
  chats                  Chat[]
  avatar                 String?
  sessions               Session[]
  emailVerificationToken String?
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
}

model Session {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  ip        String?
  userAgent String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ModelProvider {
  anthropic
  groq
  openai
  mistral
  deepseek
}

model Chat {
  id         Int           @id @default(autoincrement())
  userId     Int
  user       User          @relation(fields: [userId], references: [id])
  storeLocal Boolean?      @default(false)
  agents     String[]
  workspace  String?
  modelId    String        @default("claude-3-5-sonnet-latest")
  provider   ModelProvider @default(anthropic)
  createdAt  DateTime      @default(now())
  messages   Message[]
}

model Message {
  id        Int           @id @default(autoincrement())
  chat      Chat          @relation(fields: [chatId], references: [id])
  chatId    Int
  content   ContentItem[] @relation("MessageToContent")
  role      String
  timestamp DateTime      @default(now())
}

enum ContentType {
  text
  tool_use
  tool_result
}

model ContentItem {
  id        String      @id @default(cuid())
  type      ContentType
  text      String?
  name      String?
  input     String?
  content   String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  message   Message     @relation("MessageToContent", fields: [messageId], references: [id])
  messageId Int

  @@map("content_items")
}

model Member {
  id                String   @id @default(uuid())
  name              String
  systemPrompt      String
  tools             String[]
  hasHistoryEnabled Boolean  @default(true)
  createdAt         DateTime @default(now())
}
